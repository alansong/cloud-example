server:
  port: 2001
  undertow:
  # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
      io-threads: 4
      # 阻塞任务线程池
      worker-threads: 50
      buffer-size: 512
      direct-buffers: true
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    serviceUrl:
      defaultZone: http://127.0.0.1:8761/eureka/
spring:
  application:
    name: exampleSsoServer-dev
#    数据库配置
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/example?useUnicode=true&characterEncoding=utf8
    username: root
    password: Admin1234
    driverClassName: com.mysql.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    # 初始化大小，最小，最大 获取连接等待超时的时间
    initialSize: 5
    minIdle: 5
    maxActive: 20
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    useGlobalDataSourceStat: true
#  spring-data-jpa 配置
  jpa:
    database: MYSQL
    show-sql: false
    open-in-view: false
    properties:
      hibernate:
        hbm2ddl:
          auto: update
        dialect: org.hibernate.dialect.MySQL5Dialect
#redis 配置
  redis:
  # cluster:
    # nodes: 192.168.2.200:6379
#    host: 127.0.0.1
    host: 47.93.101.163
    port: 6379
#    # password: 77fu&&kd!#kf9o
    # redis 连接池
    # 连接池最大连接数（使用负值表示没有限制）
    pool:
      max-active: 20
      #连接池最大阻塞等待时间（使用负值表示没有限制）
      max-wait: -1
      #  连接池中的最大空闲连接
      max-idle: 8
      min-idle: 1
    timeout: 0
# cache
  cache:
    type: redis # 指定缓存为redis
